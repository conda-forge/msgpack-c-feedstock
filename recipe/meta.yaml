{% set name = "msgpack-c" %}
{% set version = "6.1.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  fn: {{ name }}-{{ version }}.tar.gz
  url: https://github.com/msgpack/{{ name }}/archive/c-{{ version }}.tar.gz
  sha256: c23c4070dbe01f46044bf70c5349f29453d655935b6dc710714c008bca0825a7

build:
  number: 1
  run_exports:
    # 2022/12/01
    # No information, but the project "feels" stable to me (hmaarrfk)
    # and we haven't had a pinning before version 3.3.0 and it hasn't been
    # a problem. However with the 4.X migration looming, I want to pin
    # to major numbers now
    - {{ pin_subpackage('msgpack-c', max_pin='x') }}
requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ stdlib("c") }}
    - cmake
    - ninja
    - make  # [unix]
    - python  # [win]
  host:
    - gtest
    - gmock
    - zlib

test:
  commands:
    - test -f $PREFIX/include/msgpack.h                         # [unix]
    - test ! -f $PREFIX/lib/libmsgpack-c.a                        # [unix]
    - test -f $PREFIX/lib/libmsgpack-c.so                       # [linux]
    - test -f $PREFIX/lib/libmsgpack-c.dylib                    # [osx]
    - if not exist %LIBRARY_INC%\\msgpack.h exit 1              # [win]
    - if not exist %LIBRARY_LIB%\\msgpack-c.lib exit 1          # [win]
    - if exist %LIBRARY_LIB%\\msgpack-c_static.lib exit 1   # [win]
    - if not exist %LIBRARY_BIN%\\msgpack-c.dll exit 1          # [win]

about:
  home: https://github.com/msgpack/msgpack-c
  license: BSL-1.0
  license_file: LICENSE_1_0.txt
  summary: MessagePack implementation for C and C++.
  doc_url: https://github.com/msgpack/msgpack-c/blob/master/README.md
  dev_url: https://github.com/msgpack/msgpack-c

extra:
  recipe-maintainers:
    - hmaarrfk
    - bluescarni
    - ndevenish
    - traversaro
